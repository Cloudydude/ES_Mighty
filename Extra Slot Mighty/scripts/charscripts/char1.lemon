include renderHooks
include palettes
include mightyRendering
include gameplaychanges
include mightySkills
include smashThrough
include objectInteractions
include mighty_Surfboard_intro

global u8 Mighty_Sprite_type // referenced in mightyRendering and renderHooks
global bool Mighty_Partner
global bool Mighty_Speed_Shoes

global string Hud_Names

define u16 continueHUD.y = 185
define u16 continueHUD.x = 20

function void ExtraChar.startup_char1()
{
	u8 gameMode = global.game_mode & 0x7f
	global.characters = (Mighty_Partner == 0) ? CHARS_SONIC_ALONE : CHARS_SONIC_AND_TAILS
	if (gameMode == 0x34 || gameMode == 0x48 || gameMode == 0x2c || gameMode == 0x30 || global.game_mode == 0x85 || global.game_mode == 0x87) //just check for mighty, thanks! 0x85 || 0x87 checks for the custom menu of BS Time atttack
		levelselect.characters = (Mighty_Partner == 0) ? 1 : 0
}

// Double colon display fix for any of the custom huds
function void HUD.drawSprite(u64 key, u16 px, u16 py, u16 renderQueue)
{
	if (key == "hud_char_colon" && global.xtrachar == 1 && System.getGlobalVariableValueByName("Mighty_hud_type") != 0)
	{
		renderQueue = 0
	}
	base.HUD.drawSprite(key, px, py, renderQueue)
}

function u64 getCharacterBonusTextIcon(u8 character)
{
	if (global.xtrachar == 1)
		return (System.getGlobalVariableValueByName("Mighty_hud_type") == 0) ? "hud_bonus_icon_Mighty" : "Nothing"
	else
		return base.getCharacterBonusTextIcon(character)
}

function u32 getCharacterColorsForControllerLEDs(u8 character)
{
	if (character == CHARACTER_SONIC && global.xtrachar == 1)
	{
		return (MightyPalette == 1) ? 0x02026d : (MightyPalette == 4) ? 0x2800ff : (MightyPalette == 5) ? 0x001264 : (MightyPalette == 6) ? 0xd2042d : (MightyPalette == 0 || MightyPalette == 2) ? 0x00006c : 0x0525f2
	}
	else
	{
		return base.getCharacterColorsForControllerLEDs(character)
	}
}

function u64 ExtraChar.getIconSpriteKey_char1(u8 type)
{
	if (type == 0x01)
		return (System.getGlobalVariableValueByName("Mighty_hud_type") == 2) ? "KC_mighty_monitor" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 1) ? "Mania_monitor_M" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 3) ? "Megamix_mighty_monitor" : (Mighty_Sprite_type == 0) ? "monitor_icon" : "monitor_icon_S3"
	else if (type == 0x02 && Renderer.hasCustomSprite("eggman-lrz-blue-12") && System.getGlobalVariableValueByName("EggmanBlue.disableMonitorReplacement") != 1)
		return "monitor_icon_eggman"
	else if (type == 0x04)
	{
		if (Mighty_Speed_Shoes == 1)
			return "monitor_icon_speedshoes"
		else
			return ((System.getGlobalVariableValueByName("Mighty_hud_type") == 1) ? "monitor_mania_mighty_shoe" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 2) ? "monitor_chaotix_mighty_shoe" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 3) ? "monitor_megamix_mighty_shoe" : "monitor_mighty_shoe")
	}
	else
		return base.ExtraChar.getIconSpriteKey_char1(type)

	return 0
}

// Mighty doesn't need the boost bar
function void RenderBoostBar()
{
	if (global.xtrachar != 1 && Renderer.hasCustomSprite("3d2dshadow_boostbar_0"))
	{
		base.RenderBoostBar()
		return
	}
}

function void HUD.drawNumber(string stringMask, u32 number, u16 px, u16 py, u16 renderQueue)
{
	if (global.xtrachar != 1)
	{
		base.HUD.drawNumber(stringMask, number, px, py, renderQueue)
		return
	}
	while (true)
	{
		u8 digit = number % 10
		Hud_Names = (System.getGlobalVariableValueByName("Mighty_hud_type") == 1) ? "_mania" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 2) ? "_chaotix" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 3) ? "_mighty_Megamix" : ""
		Renderer.drawCustomSprite(stringformat(stringMask, digit, Hud_Names), px, py, 0, SPRITE_FLAG_PRIO, renderQueue)
		px -= 8
		number /= 10
		if (number == 0)
			break
	}
}

// Numbers for time, rings and everything
function void HUD.drawDigit(u8 digit, u16 px, u16 py, u16 renderQueue)
{
	if (global.xtrachar != 1)
	{
		base.HUD.drawDigit(digit, px, py, renderQueue)
		return
	}
	Hud_Names = (System.getGlobalVariableValueByName("Mighty_hud_type") == 1) ? "_mania" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 2) ? "_chaotix" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 3) ? "_mighty_Megamix" : ""
	Renderer.drawCustomSprite(stringformat("hud_digit_%d%s", digit, Hud_Names), px, py, 0, SPRITE_FLAG_PRIO, renderQueue)
}

// Numbers for lives
function void HUD.drawSmallDigit(u8 digit, u16 px, u16 py, u16 renderQueue)
{
	if (global.xtrachar != 1)
	{
		base.HUD.drawSmallDigit(digit, px, py, renderQueue)
		return
	}
	Hud_Names = (System.getGlobalVariableValueByName("Mighty_hud_type") == 1) ? "_mania" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 2) ? "_chaotix" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 3) ? "_mighty_Megamix" : ""
	Renderer.drawCustomSprite(stringformat("hud_smalldigit_%d%s", digit, Hud_Names), px, py, 0, SPRITE_FLAG_PRIO, renderQueue)
}



//# address-hook(0x00db44) end(0x00dbb2)
function bool ExtraChar.renderHUD_char1()
{
#if STANDALONE
	if (DEBUG_DISABLE_HUD)
		return false
#endif

	s16 baseX = global.level_started
	if (baseX < 0)
	{
		baseX += 8
		global.level_started = baseX
	}
	baseX += 0x0f
	s16 baseY = 0x08
	u16 renderQueue = 0xe000

	bool isBonusStage = (global.zone >= 0x13 && global.zone <= 0x15)
#if STANDALONE
	if (!debug_mode.state)
	{
		if (!isBonusStage)
		{
			// Score
			Hud_Names = (System.getGlobalVariableValueByName("Mighty_hud_type") == 1) ? "_mania" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 2) ? "_chaotix" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 3) ? "_mighty_Megamix" : ""
			HUD.drawSprite(stringformat("hud_text_score%s", Hud_Names), baseX, baseY, renderQueue)
			++renderQueue
			HUD.drawNumber("hud_digit_%d%s", player.score * 10, baseX + ((System.getGlobalVariableValueByName("Mighty_hud_type") == 3) ? 0x64 : 0x58), baseY, renderQueue)
			++renderQueue

			// Continue hud mod
			if (Renderer.hasCustomSprite("soniccont"))
			{
				u64 key = (Mighty_Sprite_type == 0) ? "Continue_icon_Mania_alt" : "Continue_icon_S3_alt"

				if (Mods.isModActive("Continues HUD"))
				{
					Renderer.drawCustomSprite(key, baseX + continueHUD.x - ((Mighty_Sprite_type == 0) ? 12 : 11), continueHUD.y + ((Mighty_Sprite_type == 0) ? 11 : 13), 0, SPRITE_FLAG_PRIO, 0xe000, 0,255)

					if (continues_counter >= 10)
					{
						HUD.drawSmallDigit(u16((continues_counter / 10) % 10), baseX + continueHUD.x, continueHUD.y, 0xe000)
						HUD.drawSmallDigit(u16(continues_counter % 10), baseX + continueHUD.x + 8, continueHUD.y, 0xe000)
					}
					else
						HUD.drawSmallDigit(u16(continues_counter % 10), baseX + continueHUD.x, continueHUD.y, 0xe000)
				}
				else if (Mods.isModActive("Continues HUD Extra"))
				{
					u16 continuetick = 0
					u16 continuemove = 0
					u16 continuemove.y = ((Mighty_Sprite_type == 0) ? -11 : -13)
					while (continuetick < continues_counter)
					{
						Renderer.drawCustomSprite(key, baseX + continueHUD.x - ((Mighty_Sprite_type == 0) ? 12 : 11) + continuemove, max(continueHUD.y - continuemove.y, 0), 0, SPRITE_FLAG_PRIO, 0xe000, 0,255)
						continuemove += 21
						++continuetick
						if (continuemove > 370)
						{
							continuemove = 0
							continuemove.y += 26
						}
					}
				}
			}
			// Time
			{
				Hud_Names = (System.getGlobalVariableValueByName("Mighty_hud_type") == 1) ? "_mania" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 2) ? "_chaotix" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 3) ? "_mighty_Megamix" : ""
				bool show = (timer.minutes < 9 || isBonusStage || (level.framecounter & 0x08) || Game.getSetting(SETTING_INFINITE_TIME))
				HUD.drawSprite(show ? stringformat("hud_text_time%s", Hud_Names) : stringformat("hud_text_time_red%s", Hud_Names), baseX, baseY + 0x10, renderQueue)
				++renderQueue

				// Unfortunately, the time progress is done later inside the frame, so we don't have the right value in "timer.frames" yet
				//  -> If the conditions for time progress are met, add one and everything will be alright
				u16 minutes = timer.minutes
				u16 seconds = timer.seconds
				u16 frames = timer.frames
				if (hud.dirty.timer && !global.game.paused && timer.alldata < 0x93b3b)	// That is 9:59 and 59 frames
				{
					++frames
					seconds += (frames / 60)
					minutes += (seconds / 60)
					frames %= 60
					seconds %= 60
				}
				u16 centiseconds = (frames * 99 + 30) / 59

				u16 px = (minutes >= 10) ? (baseX + 8) : baseX
				if (Game.getSetting(SETTING_EXTENDED_HUD))
				{
					if (System.getGlobalVariableValueByName("Mighty_hud_type") == 3)
					{
						if (minutes >= 10)
							HUD.drawDigit(minutes / 10, px + 0x2c, baseY + 0x10, renderQueue)
						HUD.drawDigit(minutes % 10, px + 0x34, baseY + 0x10, renderQueue)
						HUD.drawSprite(stringformat("hud_char_colon%s", Hud_Names), px + 0x3c, baseY + 0x10, renderQueue)
						HUD.drawDigit(seconds / 10, px + 0x44, baseY + 0x10, renderQueue)
						HUD.drawDigit(seconds % 10, px + 0x4c, baseY + 0x10, renderQueue)
						HUD.drawSprite(stringformat("hud_char_colon%s", Hud_Names), px + 0x54, baseY + 0x10, renderQueue)
						HUD.drawDigit(centiseconds / 10, px + 0x5c, baseY + 0x10, renderQueue)
						if (minutes < 10)
							HUD.drawDigit(centiseconds % 10, px + 0x64, baseY + 0x10, renderQueue)
					}
					else
					{
						if (minutes >= 10)
							HUD.drawDigit(minutes / 10, px + 0x20, baseY + 0x10, renderQueue)
						HUD.drawDigit(minutes % 10, px + 0x28, baseY + 0x10, renderQueue)
						#if GAMEAPP >= 0x22051500
						if (Mods.isModActive("Double Colon Display") && System.getGlobalVariableValueByName("Colons") == 1)
						{
							HUD.drawSprite(stringformat("hud_char_colon%s", Hud_Names), px + 0x30, baseY + 0x10, renderQueue)
						}
						else
						{
							HUD.drawSprite(stringformat("hud_char_minutes%s", Hud_Names), px + 0x30, baseY + 0x10, renderQueue)
						}
					#endif
					#if GAMEAPP <= 0x22050800
						if (Mods.isModActive("Double Colon Display"))
						{
							HUD.drawSprite(stringformat("hud_char_colon%s", Hud_Names), px + 0x30, baseY + 0x10, renderQueue)
						}
						else
						{
							HUD.drawSprite(stringformat("hud_char_minutes%s", Hud_Names), px + 0x30, baseY + 0x10, renderQueue)
						}
					#endif
						HUD.drawDigit(seconds / 10, px + 0x38, baseY + 0x10, renderQueue)
						HUD.drawDigit(seconds % 10, px + 0x40, baseY + 0x10, renderQueue)
					#if GAMEAPP >= 0x22051500
						if (Mods.isModActive("Double Colon Display") && System.getGlobalVariableValueByName("Colons") == 1)
						{
							HUD.drawSprite(stringformat("hud_char_colon%s", Hud_Names), px + 0x48, baseY + 0x10, renderQueue)
						}
						else
						{
							HUD.drawSprite(stringformat("hud_char_seconds%s", Hud_Names), px + 0x48, baseY + 0x10, renderQueue)
						}
					#endif
					#if GAMEAPP <= 0x22050800
						if (Mods.isModActive("Double Colon Display"))
						{
							HUD.drawSprite(stringformat("hud_char_colon%s", Hud_Names), px + 0x48, baseY + 0x10, renderQueue)
						}
						else
						{
							HUD.drawSprite(stringformat("hud_char_seconds%s", Hud_Names), px + 0x48, baseY + 0x10, renderQueue)
						}
					#endif
						HUD.drawDigit(centiseconds / 10, px + 0x50, baseY + 0x10, renderQueue)
						if (minutes < 10)
							HUD.drawDigit(centiseconds % 10, px + 0x58, baseY + 0x10, renderQueue)
					}
				}
				else
				{
					if (System.getGlobalVariableValueByName("Mighty_hud_type") == 3)
					{
						if (minutes >= 10)
							HUD.drawDigit(minutes / 10, px + 0x44, baseY + 0x10, renderQueue)
						HUD.drawDigit(minutes % 10, px + 0x4c, baseY + 0x10, renderQueue)
						HUD.drawSprite(stringformat("hud_char_colon%s", Hud_Names), px + 0x54, baseY + 0x10, renderQueue)
						HUD.drawDigit(seconds / 10, px + 0x5c, baseY + 0x10, renderQueue)
						HUD.drawDigit(seconds % 10, px + 0x64, baseY + 0x10, renderQueue)
					}
					else
					{
						if (minutes >= 10)
							HUD.drawDigit(minutes / 10, px + 0x20, baseY + 0x10, renderQueue)
						HUD.drawDigit(minutes % 10, px + 0x28, baseY + 0x10, renderQueue)
						HUD.drawSprite(stringformat("hud_char_colon%s", Hud_Names), px + 0x30, baseY + 0x10, renderQueue)
						HUD.drawDigit(seconds / 10, px + 0x38, baseY + 0x10, renderQueue)
						HUD.drawDigit(seconds % 10, px + 0x40, baseY + 0x10, renderQueue)
					}
				}
				++renderQueue
			}
		}

		// Rings
		{
			u16 py = (isBonusStage) ? baseY : baseY + 0x20
			bool show = (ring_counter != 0 || (level.framecounter & 0x08))
			Hud_Names = (System.getGlobalVariableValueByName("Mighty_hud_type") == 1) ? "_mania" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 2) ? "_chaotix" : (System.getGlobalVariableValueByName("Mighty_hud_type") == 3) ? "_mighty_Megamix" : ""
			HUD.drawSprite(show ? stringformat("hud_text_rings%s", Hud_Names) : stringformat("hud_text_rings_red%s", Hud_Names), baseX, py, renderQueue)
			++renderQueue

			u16 px = baseX + (!isBonusStage && Game.getSetting(SETTING_EXTENDED_HUD) ? 0x58 : 0x40)
			for (u32 value = ring_counter;;)
			{
				HUD.drawDigit(value % 10, px + ((System.getGlobalVariableValueByName("Mighty_hud_type") == 3 && Game.getSetting(SETTING_EXTENDED_HUD)) ? 0x0c : (System.getGlobalVariableValueByName("Mighty_hud_type") == 3) ? 0x24 : 0x00), py, renderQueue)
				px -= 8
				value /= 10
				if (value == 0)
					break
			}
			++renderQueue
		}

		// Lives (not visible in Time Attack)
		if (!Game.isTimeAttack() && !Game.getSetting(SETTING_INFINITE_LIVES))
		{
			bool useMobilePosition = HUD.useMobileLivesDisplay()
			u16 px = useMobilePosition ? (getScreenWidth() - baseX - 0x30) : baseX
			u16 py = useMobilePosition ? baseY : 200
			HUD.drawSprite(getCharacterLivesIcon(0), px, py, renderQueue)

			++renderQueue

			if (lives_counter < 100)
			{
				if (lives_counter >= 10)
					HUD.drawSmallDigit(u16((lives_counter / 10) % 10), px + ((System.getGlobalVariableValueByName("Mighty_hud_type") == 3) ? 0x12 : 0x20), py + 8, renderQueue)
				HUD.drawSmallDigit(u16(lives_counter % 10), px + ((System.getGlobalVariableValueByName("Mighty_hud_type") == 3) ? 0x1a :0x28), py + 8, renderQueue)
			}
			else
			{
				if (lives_counter >= 100)
					HUD.drawSmallDigit(u16((lives_counter / 100) % 10), px + 0x20, py + 8, renderQueue)
				if (lives_counter >= 10)
					HUD.drawSmallDigit(u16((lives_counter / 10) % 10), px + 0x28, py + 8, renderQueue)
				HUD.drawSmallDigit(u16(lives_counter % 10), px + 0x30, py + 8, renderQueue)
			}
		}
	}
	else
#endif
	{
		D4 = (isBonusStage) ? 8 : 0

		if ((level.framecounter & 0x08) == 0)
		{
			if (ring_counter == 0)
			{
				D4 += 2
			}
			if (timer.minutes == 9 && !isBonusStage)
			{
				D4 += 4
			}
		}

		// Targets:
		//  - 0x00dbc2	-> D4.u16 = 0x00
		//  - 0x00dc00	-> D4.u16 = 0x02
		//  - 0x00dc32	-> D4.u16 = 0x04
		//  - 0x00dc96	-> D4.u16 = 0x08
		//  - 0x00dcb6	-> D4.u16 = 0x0a
		A1 = tableLookupAddress(0x00dbb6, D4.u16)

		D4.s16 = u16[A1] - 1
		D0.s16 = baseX + 0x80
		D1.u16 = 0x0108
		D5.u16 = 0x86ca
		A1 += 2
		if (D4.s16 >= 0)
		{
			writeToSpriteTable(renderQueue)
		}
	}

	//Because we want to disable the normal HUD, return true
	return true
}

// Give Mighty, Knuckles' spacing for the bluespheres results screens
//# address-hook(0x02e3b8) end(0x02e3c2)
function void fn02e3b8()
{
	if (global.xtrachar == 1)
		global.characters = CHARS_KNUCKLES_ALONE
	base.fn02e3b8()
}

// Change Mighty back to himself after the bluespheres results screen
//# address-hook(0x02e410) end(0x02e4d2)
function void fn02e410()
{
	base.fn02e410()
	if (global.xtrachar == 1 && objA0.countdown_value <= 0)
		global.characters = (Mighty_Partner == 0) ? CHARS_SONIC_ALONE : CHARS_SONIC_AND_TAILS
}

// Custom Super/Hyper themes
// Requires this https://gamebanana.com/mods/54144

function u64 getSonicSuperTheme()
{
	if (global.xtrachar == 1)
		return "2c_sonic3"
	else
		return base.getSonicSuperTheme()
}

function u64 getSonicHyperTheme()
{
	if (global.xtrachar == 1)
		return "2e_proto"
	else
		return base.getSonicHyperTheme()
}

// Extra Save Slots background color
function s32 ESS_saveboxgetcolor_Es1()
{
	return 0x00906c
}

//# address-hook(0x00c154) end(0x00c260)
function void InitSaveSlots()
{
	// Call the base function
    base.InitSaveSlots()
    
	// Only run in the Data Select menu
	if (global.game_mode == 0x4c)
		Mighty.saveSlots_solveDDZ()
}

function void Mighty.saveSlots_solveDDZ()
{
    // Call another function that defines the value for u8[A0 + 0x05]
    fn00d7c0()
    
    // Loop simulates slots
    for (u8 slot = 0x00; slot < 0x08; ++slot)
    {
        u32 slotAddress = 0xffffb128 + (0x4a * slot)
        u32 dataAddress = 0xffffe6ac + (0x0a * slot)
        bool isMighty = u8[slotAddress + 0x05] == 0x01
        
        if (isMighty && MightyDDZ == 0x01)
        {
           if (u8[dataAddress] == 0x00 && u8[dataAddress + 0x03] == 0x0d)
           {               
               bool isChaos = (u16[dataAddress + 0x06] == 0x5555)
               bool isSuper = ((u16[dataAddress + 0x06] == 0xffff) || (u16[dataAddress + 0x06] == 0xfffc)) // No have idea why here actually 0xfffc
               
               u8[dataAddress] = (isChaos ? 0x02 : (isSuper ? 0x03 : 0x01))
               u8[dataAddress + 0x03] = 0x0e
               
               SaveGameSlot()
           }
       }
    }
}

//@ Function taken from sonic3air_dev/scripts/menus/dataselect.lemon
//# address-hook(0x00d790) end(0x00d790)
function void fn00d790()
{
    for (u8 slot = 0x00; slot < 0x08; ++slot)
    {
        u32 slotAddress = 0xffffb128 + (0x4a * slot)
        u32 currentSlotAddress = 0xffffb128 + (0x4a * (dataselect.slot_selected - 0x01))
        if (currentSlotAddress != slotAddress)
        {
            u8[slotAddress + 0x8a] = 0x00
        }
    }
    
    // Call base function
    base.fn00d790()
}

//@ Function taken from sonic3air_dev/scripts/menus/dataselect.lemon
function bool fn00d458()
{
    bool completedSlot = u8[A1] != 0x00 && u8[A1] != 0x80
    bool controlCheck = (control.pad1.pressed & CONTROL_DOWN) || (control.pad1.pressed & CONTROL_UP)
    
    if (u8[A0 + 0x05] == 0x01 && MightyDDZ == 0x01 && completedSlot && controlCheck)
    {
		u32 backupA0 = A0
        D6 = 0x0c
        if (u8[A0 + 0x8a] != 0x01)
        {
            u16[A0 + 0x36] = 0x0d
            u8[A0 + 0x8a] = 0x01
        }
        
        // Zone select
        D1.u16 = u16[A0 + 0x36]
        if (control.pad1.pressed & CONTROL_DOWN)
        {
            playSound(0x5b)
            --D1.u16
            
            if (D1.s16 < 0x00)
                D1.u16 = D6.u16
        }
        else if (control.pad1.pressed & CONTROL_UP)
        {
            playSound(0x5b)
            ++D1.u16
            
            if (D1.u16 > D6.u16)
                D1 = 0x00
        }
        u16[A0 + 0x36] = D1.u16
        waitForNextFrame()
		DataSelect.drawCustomPlanes()

		A0 = backupA0
        
        // Return the Base function
        return base.fn00d458()
    }
    else 
    {
        // Return the Base function
        return base.fn00d458()
    }
}

//# address-hook(0x04e24c) end(0x04e25e)
function void fn04e24c()
{
	// Sonic going Super at MAX difficulty
	if (global.xtrachar == 1 || (global.xtrachar == 2 && Mods.isModActive("Extra Slot Ray")))
	{
		// Mighty shouldn't go super here
	}
	else
	{
		base.fn04e24c()
		return
	}
}

function string ExtraChar.getCharacterName(u8 xtrachar)
{
	u64 Name = (!Mighty_Partner) ? "Mighty" : (Mods.isModActive("Extra Slot Ray") && (System.getGlobalVariableValueByName("Ray_Partner") == 3 || System.getGlobalVariableValueByName("Ray_Partner") == 4)) ? "Mighty & Ray" : "Mighty & Tails"
	if (xtrachar == 1)
		return Name
	return base.ExtraChar.getCharacterName(xtrachar)
}

function string RenderExtraCharIcon(u8 xtrachar)
{
	if (xtrachar == 1)
	{
		u64 names = (!Mighty_Sprite_type) ? "M_Mighty" : "S3_Mighty"
		return stringformat("level_select_S3C_%s", names)
	}
	return base.RenderExtraCharIcon(xtrachar)
}

// Sets the availability status of the character for selection in the Competition menu.
function bool ExtraChar.CompetitionMode.isCharacterAvailable(u8 xtrachar)
{
	// Mighty check
	if (xtrachar == 0x01)
		return true
	
	// Call the base function
	return base.ExtraChar.CompetitionMode.isCharacterAvailable(xtrachar)
}

function string getCharacterLivesIcon(u8 character)
{
	if (global.xtrachar == 0x01)
	{
		u64 characterName
		if (System.getGlobalVariableValueByName("Mighty_hud_type") == 2)
			characterName = "mightyKC"
		else if (System.getGlobalVariableValueByName("Mighty_hud_type") == 1)
			characterName = "mightyMania"
		else if (System.getGlobalVariableValueByName("Mighty_hud_type") == 3)
			characterName = "mightyMegamix"
		else if (Mighty_Sprite_type == 0)
			characterName = "Mania"
		else
			characterName = "S3"
		return stringformat("hud_lives_icon_%s", characterName)
	}
	return base.getCharacterLivesIcon(character)
}