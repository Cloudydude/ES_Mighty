global u8 GfxMightyDroppingDown		// Weird name, but I don't want to cause conflicts with already existing scripts...
global s16 ESM.yVelocityLastFrame

global u8 GfxMightySmashing

function void yieldExecution()
{
    if GfxMightyDroppingDown > 0
    {
        --GfxMightyDroppingDown
    }
    if u8[0xffffb000 + 0x0d] & 0x02					// Is Mighty dropping down?
    {
        GfxMightyDroppingDown = 2					// Keep this going for 2 frames, just to be sure
    }
	if GfxMightySmashing > 0
    {
        --GfxMightySmashing
    }
	ESM.yVelocityLastFrame = s16[0xffffb000 + 0x1a] // Store y-speed

	objIgnoreUpdate()

    base.yieldExecution()
}

function bool ItBeMighty()
{
	return ((global.xtrachar == 1 && u8[A1 + 0x38] == CHARACTER_SONIC))
}

function void checkStayDroppingDown()
{
	if (!ItBeMighty())
		return
	else if (GfxMightyDroppingDown) || (u8[0xffffb000 + 0x0d] & 0x02)
	{
		objA1.velocity.y = ESM.yVelocityLastFrame		
		u8[A1 + 0x0d] |= 0x02           // Mighty dropdown flag
		u8[A1 + 0x2f] = 1               // Double jump state
	}
}

// Rocks, used in multiple levels (e.g. AIZ, LRZ)
//# address-hook(0x01fbae) end(0x01fbde)
function void fn01fbae()
{
	base.fn01fbae()
	checkStayDroppingDown()
}

// SOZ rocks
//# address-hook(0x0417a6) end(0x0417dc)
function void fn0417a6()
{
	base.fn0417a6()
	if (D0.u8 == 2)		// Same check as base function...
	{
		checkStayDroppingDown()
	}
}

// Cork floor, used in multiple levels (e.g. AIZ, FBZ)
//# address-hook(0x02a58e)
function void fn02a58e()
{
	base.fn02a58e()
	checkStayDroppingDown()
}

// ICZ ice blocks
//# address-hook(0x08b3aa) end(0x08b430)
function void fn08b3aa()
{
	base.fn08b3aa()

	// While it certainly isn't ideal to do the collision check twice, I do want to make sure the base function gets called, for compatibility reasons.
	// Honestly, this collision check is sort of unorthodox anyway...
	A2 = 0
	if ((objA0.flags2a & 0x08) && objA0.value3a == char.state.ROLLING)
	{
		A1 = 0xffffb000
		if (objA0.flags2a & 0x10)
		{
			A2 = 0xffffb04a
		}
	}
	else if ((objA0.flags2a & 0x10) && objA0.value3b == char.state.ROLLING)
	{
		A1 = 0xffffb04a
	#if STANDALONE
		if (objA0.flags2a & 0x08)
		{
			A2 = 0xffffb000
		}
	#endif
	}
	else
	{
		return
	}
	
	checkStayDroppingDown()
}

//FBZ bombable floors
//# address-hook(0x03c636) end(0x03c6b6)
function void fn03c636()
{
	base.fn03c636()

	if ((objA0.flags2a & 0x08))
	{
		if ((GfxMightyDroppingDown) || (u8[A1 + 0x0d] & 0x02))
		{
			A2 = 0x03c6bc
			D1 = 3
			while (D1.s16 >= 0)
			{
				if (allocDynamicObjectAfterA0())
				{
					objA1.update_address = 0x01e5e0
					u8[A1 + 0x05] = 0x06
					u16[A1 + 0x0a] = 0x8000
					objA1.position.x.u16 = objA0.position.x.u16
					objA1.position.y.u16 = objA0.position.y.u16
					D0.u16 = u16[(A2+=2)-2]
					objA1.position.x.u16 += D0.u16
					D0.u16 = u16[(A2+=2)-2]
					objA1.position.y.u16 += D0.u16
				}
				--D1.s16
			}

			objA0.position.x.u16 = 0x7f00
			u16[A0 + 0x44] = objA0.position.x.u16
			playSound(0x81)
			
			A1 = 0xffffb000
			checkStayDroppingDown()
		}
	}
}

// MGZ checkerboard floors
//# address-hook(0x0209d0) end(0x020a52)
function void fn0209d0()
{
	// Horizontal barrier towards the end of MGZ 1
	base.fn0209d0()
	if ((objA0.flags2a & 0x08))
	{
		if ((GfxMightyDroppingDown) || (u8[A1 + 0x0d] & 0x02))
		{
			if (objA0.flags2a & object.flag.P1_ON_OBJECT)
			{
				objA0.flags2a &= ~object.flag.P1_ON_OBJECT
				A1 = 0xffffb000
				u8[A1 + 0x2a] &= ~char.flag.ON_OBJECT
			}

			if (objA0.flags2a & object.flag.P2_ON_OBJECT)
			{
				objA0.flags2a &= ~object.flag.P2_ON_OBJECT
				A1 = 0xffffb04a
				u8[A1 + 0x2a] &= ~char.flag.ON_OBJECT
			}

			A4 = 0x020a76
			++objA0.animation.sprite
			objA0.sprite_priority = 0x80
			objA0.update_address = 0x020a56
			Wall.Destroy()

			if (objA0.respawn_entry)
			{
				A1 = 0xffff0000 + objA0.respawn_entry
				u8[A1] &= ~0x80
				objA0.respawn_entry = 0
			}

			fn020a56()

			A1 = 0xffffb000
			checkStayDroppingDown()
		}
	}
}

//LRZ sinking rocks
//# address-hook(0x0427e2) end(0x04282e)
function void fn0427e2()
{
	base.fn0427e2()
	if ((objA0.flags2a & 0x08))
	{
		if ((GfxMightyDroppingDown) || (u8[A1 + 0x0d] & 0x02))
		{
			//if (objA0.flags2e != 0x40)
			objA0.flags2e = 0x40
			if (objA0.flags2a & object.flag.P1_ON_OBJECT)
			{
				objA0.flags2a &= ~object.flag.P1_ON_OBJECT
				A1 = 0xffffb000
				u8[A1 + 0x2a] &= ~char.flag.ON_OBJECT
			}
			
			if (objA0.flags2a & object.flag.P2_ON_OBJECT)
			{
				objA0.flags2a &= ~object.flag.P2_ON_OBJECT
				A1 = 0xffffb04a
				u8[A1 + 0x2a] &= ~char.flag.ON_OBJECT
			}

			A1 = 0xffffb000
			checkStayDroppingDown()
		}
	}
}